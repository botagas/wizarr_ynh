#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# If API key doesn't exist, create it
api_key=$(ynh_app_setting_get --key=api_key)
if [[ -z "$api_key" ]]; then
    api_key=$(ynh_string_random)
    ynh_app_setting_set --app=$app --key=api_key --value="$api_key"
fi

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression "Upgrading dependencies..."

# Check if Python 3.13 is already installed, if not install it
check_python

# Install/upgrade UV package manager
if ! command -v uv &>/dev/null; then
    curl -LsSf https://astral.sh/uv/install.sh | sh
    cp "$HOME/.cargo/bin/uv" "/usr/local/bin/uv"
fi

# Install Node.js
nodejs_version="22"
ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep=".env database logs data .venv"

#=================================================
# UPGRADE PYTHON VIRTUAL ENVIRONMENT
#=================================================
ynh_script_progression "Upgrading Python virtual environment..."

pushd "$install_dir"
    # Upgrade virtual environment dependencies
    source .venv/bin/activate
    pip install --upgrade pip uv
    
    # Use UV to upgrade dependencies from pyproject.toml
    uv sync --locked
    
    deactivate
popd

#=================================================
# BUILD FRONTEND ASSETS
#=================================================
ynh_script_progression "Building frontend assets..."

pushd "$install_dir"
    # Install npm dependencies and build frontend
    npm --prefix app/static/ install
    npm --prefix app/static/ run build
    
    # Compile translations using UV
    source .venv/bin/activate
    uv run pybabel compile -d app/translations
    deactivate
popd

#=================================================
# DATABASE MIGRATION
#=================================================
ynh_script_progression "Running database migrations..."

pushd "$install_dir"
    source .venv/bin/activate
    
    # Run database migrations
    uv run flask --app run:app db upgrade
    
    deactivate
popd

#=================================================
# UPDATE CONFIG FILES
#=================================================
ynh_script_progression "Updating $app's configuration files..."

# Update gunicorn configuration
ynh_config_add --template="gunicorn.conf.py" --destination="$install_dir/gunicorn.conf.py"

# Update environment file for Wizarr's environment variable usage
cat > "$install_dir/.env" << EOF
# Application version (displayed in startup logs)
APP_VERSION=$(ynh_read_manifest "version" | cut -d'~' -f1)

# Timezone configuration
TZ=$(timedatectl show --property=Timezone --value)

# Logging configuration
LOG_LEVEL=INFO

# Optional API key for /api/status endpoint (preserve existing or generate new)
WIZARR_API_KEY=$api_key

# Disable built-in auth if using external auth providers (Authelia, Authentik, etc)
DISABLE_BUILTIN_AUTH=false
EOF

chown "$app:$app" "$install_dir/.env" "$install_dir/gunicorn.conf.py"

#=================================================
# REAPPLY SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add "$app" --description="Web-based media invitation system" --log="/var/log/$app/$app.log"

ynh_config_add_logrotate

chown -R "$app:$app" "$install_dir"
chown -R "$app:$app" "/var/log/$app"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
