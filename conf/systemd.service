[Unit]
Description=Wizarr media server invitation system
After=network.target

[Service]
Type=exec
User=__APP__
Group=__APP__
WorkingDirectory=__INSTALL_DIR__
Environment=PATH=__INSTALL_DIR__/.venv/bin:/usr/local/bin:$PATH
Environment=PYTHONPATH=__INSTALL_DIR__
ExecStart=__INSTALL_DIR__/.venv/bin/uv run gunicorn --config gunicorn.conf.py --bind 127.0.0.1:__PORT__ run:app
StandardOutput=append:/var/log/__APP__/__APP__.log
StandardError=append:/var/log/__APP__/__APP__.log
SyslogIdentifier=__APP__
Restart=always
RestartSec=10

### Security and sandboxing options to harden the service
NoNewPrivileges=yes
PrivateTmp=yes
PrivateDevices=yes
RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6 AF_NETLINK
RestrictNamespaces=yes
RestrictRealtime=yes
DevicePolicy=closed
ProtectClock=yes
ProtectHostname=yes
ProtectProc=invisible
ProtectSystem=full
ProtectControlGroups=yes
ProtectKernelModules=yes
ProtectKernelTunables=yes
LockPersonality=yes
SystemCallArchitectures=native
SystemCallFilter=~@clock @debug @module @mount @obsolete @reboot @setuid @swap @cpu-emulation @privileged
ReadWritePaths=__INSTALL_DIR__ /var/log/__APP__

### Capability restrictions for enhanced security
CapabilityBoundingSet=~CAP_RAWIO CAP_MKNOD
CapabilityBoundingSet=~CAP_AUDIT_CONTROL CAP_AUDIT_READ CAP_AUDIT_WRITE
CapabilityBoundingSet=~CAP_SYS_BOOT CAP_SYS_TIME CAP_SYS_MODULE CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_LEASE CAP_LINUX_IMMUTABLE CAP_IPC_LOCK
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND CAP_WAKE_ALARM
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_MAC_ADMIN CAP_MAC_OVERRIDE
CapabilityBoundingSet=~CAP_NET_ADMIN CAP_NET_BROADCAST CAP_NET_RAW
CapabilityBoundingSet=~CAP_SYS_ADMIN CAP_SYS_PTRACE CAP_SYSLOG

[Install]
WantedBy=multi-user.target
